os:
  - linux

language:
  - cpp

compiler:
  - gcc
  - clang

env:
  global:
    - PEAK_DRIVER_VER=8.5.1

before_install:
  - sudo apt-get update -qq  # -qq No output except for errors
  - '[[ "$TRAVIS_EVENT_TYPE" = cron ]] && export YARP_CHECKOUT=devel || export YARP_CHECKOUT=master'

install:
  #-- Install SpaceNavigator-related packages
  - sudo apt-get install libspnav-dev
  #-- Install Wiimote-related packages
  - sudo apt-get install libxwiimote-dev
  #-- Install cmake
  - sudo apt-get install cmake
  #-- Install yarp
  - git clone --branch="$YARP_CHECKOUT" https://github.com/robotology/yarp
  - cd yarp && mkdir build && cd build
  - cmake .. -DSKIP_ACE=ON
  - make
  - sudo make install
  - cd ../..
  #- Download and install Peak CAN driver
  - wget -O- https://www.peak-system.com/fileadmin/media/linux/files/peak-linux-driver-$PEAK_DRIVER_VER.tar.gz | tar xz
  - cd peak-linux-driver-$PEAK_DRIVER_VER
  - make -C lib
  - sudo make -C lib install
  - cd ..
  # see http://gronlier.fr/blog/2015/01/adding-code-coverage-to-your-c-project/
  - if [ "$CXX" = "g++" ]; then wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz; fi
  - if [ "$CXX" = "g++" ]; then tar xf lcov_1.11.orig.tar.gz; fi
  - if [ "$CXX" = "g++" ]; then sudo make -C lcov-1.11/ install; fi
  - if [ "$CXX" = "g++" ]; then gem install coveralls-lcov; fi

before_script:
  - mkdir -p build && cd build

script:
  - cmake .. -DENABLE_LeapMotionSensor=OFF -DENABLE_coverage=ON
  - make
  - sudo make install

after_success:
  #  - cd ${TRAVIS_BUILD_DIR}
  # capture coverage info
  - if [ "$CXX" = "g++" ]; then lcov --directory . --capture --output-file coverage.info; fi
  # filter out system and test code
  - if [ "$CXX" = "g++" ]; then lcov --remove coverage.info  '/usr/*' 'test/*' --output-file coverage.info; fi
  # debug before upload
  - if [ "$CXX" = "g++" ]; then lcov --list coverage.info; fi
  # uploads to coveralls
  #- if [ "$CXX" = "g++" ]; then coveralls-lcov --source-encoding=ISO-8859-1 --repo-token InWqFy6VWMrEUzr2Rn8XV0cGqv3wXWo2d coverage.info; fi
  - if [ "$CXX" = "g++" ]; then coveralls-lcov --source-encoding=ISO-8859-1 coverage.info; fi

  - sudo make uninstall

